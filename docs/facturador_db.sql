-- MySQL Script generated by MySQL Workbench
-- Sat Dec  3 12:54:47 2016
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema facturador_db
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema facturador_db
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `facturador_db` DEFAULT CHARACTER SET utf8 ;
USE `facturador_db` ;

-- -----------------------------------------------------
-- Table `facturador_db`.`tipo_cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facturador_db`.`tipo_cliente` (
  `id_tipo_cliente` BIGINT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(20) NOT NULL,
  `estado` BIT NOT NULL,
  PRIMARY KEY (`id_tipo_cliente`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facturador_db`.`cliente`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facturador_db`.`cliente` (
  `id_cliente` BIGINT NOT NULL AUTO_INCREMENT COMMENT 'Llave primaria de la tabla de clientes, se maneja a partir de un indice autoincrementado.',
  `nombre` VARCHAR(50) NOT NULL,
  `correo` VARCHAR(60) NOT NULL,
  `telefono` VARCHAR(30) NOT NULL,
  `direccion` VARCHAR(55) NULL,
  `estado` BIT NOT NULL,
  `id_tipo_cliente` BIGINT NOT NULL,
  PRIMARY KEY (`id_cliente`),
  UNIQUE INDEX `correo_UNIQUE` (`correo` ASC),
  INDEX `fk_cliente_tipo_cliente_idx` (`id_tipo_cliente` ASC),
  CONSTRAINT `fk_cliente_tipo_cliente`
    FOREIGN KEY (`id_tipo_cliente`)
    REFERENCES `facturador_db`.`tipo_cliente` (`id_tipo_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facturador_db`.`tipo_producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facturador_db`.`tipo_producto` (
  `id_tipo_producto` BIGINT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(30) NOT NULL,
  `estado` BIT NOT NULL,
  PRIMARY KEY (`id_tipo_producto`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facturador_db`.`producto`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facturador_db`.`producto` (
  `id_producto` BIGINT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `precio_unitario` DECIMAL(10,0) NOT NULL,
  `cantidad` INT NOT NULL,
  `estado` BIT NOT NULL,
  `id_tipo_producto` BIGINT NOT NULL,
  PRIMARY KEY (`id_producto`),
  INDEX `fk_producto_tipo_producto1_idx` (`id_tipo_producto` ASC),
  CONSTRAINT `fk_producto_tipo_producto1`
    FOREIGN KEY (`id_tipo_producto`)
    REFERENCES `facturador_db`.`tipo_producto` (`id_tipo_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facturador_db`.`rol`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facturador_db`.`rol` (
  `id_rol` BIGINT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(45) NOT NULL,
  `estado` BIT NOT NULL,
  PRIMARY KEY (`id_rol`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facturador_db`.`usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facturador_db`.`usuario` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `nombre` VARCHAR(55) NOT NULL,
  `documento` INT NOT NULL,
  `telefono` VARCHAR(45) NOT NULL,
  `direccion` VARCHAR(60) NOT NULL,
  `correo` VARCHAR(65) NOT NULL,
  `contrasena` VARCHAR(100) NOT NULL,
  `estado` BIT NOT NULL,
  `id_rol` BIGINT NOT NULL,
  PRIMARY KEY (`id_usuario`),
  INDEX `fk_usuario_rol1_idx` (`id_rol` ASC),
  CONSTRAINT `fk_usuario_rol1`
    FOREIGN KEY (`id_rol`)
    REFERENCES `facturador_db`.`rol` (`id_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facturador_db`.`factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facturador_db`.`factura` (
  `id_factura` BIGINT NOT NULL AUTO_INCREMENT,
  `fecha_generacion` DATE NOT NULL,
  `fecha_pago` DATE NULL,
  `fecha_garantia` DATE NULL,
  `estado` BIT NOT NULL,
  `id_cliente` BIGINT NOT NULL,
  `id_usuario` INT NOT NULL,
  PRIMARY KEY (`id_factura`),
  INDEX `fk_factura_cliente1_idx` (`id_cliente` ASC),
  INDEX `fk_factura_usuario1_idx` (`id_usuario` ASC),
  CONSTRAINT `fk_factura_cliente1`
    FOREIGN KEY (`id_cliente`)
    REFERENCES `facturador_db`.`cliente` (`id_cliente`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_factura_usuario1`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `facturador_db`.`usuario` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `facturador_db`.`detalle_factura`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `facturador_db`.`detalle_factura` (
  `id_detalle_factura` BIGINT NOT NULL AUTO_INCREMENT,
  `cantidad` INT NOT NULL,
  `valor_parcial` DECIMAL(10,0) NOT NULL,
  `id_producto` BIGINT NOT NULL,
  `id_factura` BIGINT NOT NULL,
  PRIMARY KEY (`id_detalle_factura`),
  INDEX `fk_detalle_factura_producto1_idx` (`id_producto` ASC),
  INDEX `fk_detalle_factura_factura1_idx` (`id_factura` ASC),
  CONSTRAINT `fk_detalle_factura_producto1`
    FOREIGN KEY (`id_producto`)
    REFERENCES `facturador_db`.`producto` (`id_producto`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_detalle_factura_factura1`
    FOREIGN KEY (`id_factura`)
    REFERENCES `facturador_db`.`factura` (`id_factura`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
